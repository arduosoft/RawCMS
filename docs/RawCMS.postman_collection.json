{
	"info": {
		"_postman_id": "bddea064-20f6-5f9b-91e8-5f3ebb2ff3c7",
		"name": "RawCMS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth - Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1d1d4972-96f8-44d7-881e-715258432f45",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"token\", \"Bearer \"+jsonData.access_token);",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"pm.test(\"Token not null\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.access_token).to.not.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "openid",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "raw.client",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "raw.secret",
							"type": "text"
						},
						{
							"key": "password",
							"value": "prova",
							"type": "text"
						},
						{
							"key": "username",
							"value": "bobby",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:28436/connect/token",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"connect",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth - introspect",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c4fdaec1-abdf-493d-bc2d-e15623176a4f",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "rawcms",
							"type": "string"
						},
						{
							"key": "password",
							"value": "raw.secret",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "Basic YXBpMTpzZWNyZXQ="
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "openid",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:28436/connect/introspect",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"connect",
						"introspect"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth - UserList",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "49a4f7d1-c99e-4755-93ed-a975e18fe279",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"",
							"pm.test(\"List not empty\", function () {",
							"    var jsonData = pm.response.json();",
							"    var status=jsonData.status;",
							"    var itemsCount=jsonData.data.items.length;",
							"    var expectItemsCount=Math.min(jsonData.data.totalCount,jsonData.data.pageSize);",
							"    ",
							"    pm.expect(status).to.eql(0);",
							"    pm.expect(itemsCount).to.be.above(0);",
							"    pm.expect(itemsCount).to.be.eql(expectItemsCount);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:28436/system/Admin/_users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"system",
						"Admin",
						"_users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth - update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "06703f64-8559-474c-9930-eb1152920cc4",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"pm.test(\"No error\", function () {",
							"    var jsonData = pm.response.json();",
							"    var errorCount=jsonData.errors.length;",
							"    ",
							"    pm.expect(errorCount).to.eql(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": " {\n                \"UserName\": \"bob2\",\n                \"Email\": \"test@test.it\",\n                \"Password\":\"prova\"\n                \"Roles\": [],\n            }"
				},
				"url": {
					"raw": "http://localhost:28436/system/Admin/_users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"system",
						"Admin",
						"_users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth - openid-configuration",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4ab93084-2ee7-4205-87aa-de92ca64461b",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"",
							"pm.test(\"Token endpoint not null\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.token_endpoint).to.not.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:28436/.well-known/openid-configuration",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						".well-known",
						"openid-configuration"
					]
				}
			},
			"response": []
		},
		{
			"name": "Schema  - list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "112aceb4-3723-4af2-9d7e-2d13c9dda767",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    var status=jsonData.status;",
							"    var itemsCount=jsonData.data.items.length;",
							"    var expectItemsCount=Math.min(jsonData.data.totalCount,jsonData.data.pageSize);",
							"    ",
							"    pm.expect(status).to.eql(0);",
							"    pm.expect(itemsCount).to.be.above(0);",
							"    pm.expect(itemsCount).to.be.eql(expectItemsCount);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:28436/system/admin/_schema",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"system",
						"admin",
						"_schema"
					]
				}
			},
			"response": []
		},
		{
			"name": "Schema - Schema ADD",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "237ee9d3-9470-4557-9a56-aadd0ef4eddf",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n               \n                \"CollectionName\": \"Items\",\n                \"AllowNonMappedFields\": false,\n                \"FieldSettings\": [\n                    {\n                        \"Name\": \"MyField\",\n                        \"Required\": true,\n                        \"Type\": \"String\",\n                        \"BaseType\": \"String\",\n                        \"Options\": {\n                            \"maxlength\": 200,\n                            \"regexp\": \"allowed(.*)\"\n                        }\n                    },\n                    {\n                        \"name\": \"_id\",\n                        \"Type\": \"String\",\n                        \"BaseType\": \"String\"\n                    },\n                    {\n                        \"Name\": \"MyNumberField\",\n                        \"Required\": false,\n                        \"Type\": \"number\",\n                        \"BaseType\": \"Int\",\n                        \"Options\": {\n                            \"max\": 200,\n                            \"min\": \"allowed(.*)\"\n                        }\n                    }\n                ],\n             \n                \"PresaveScript\": \"item.Prova=23; item.MyNumberField=item.MyNumberField+10;\"\n            }"
				},
				"url": {
					"raw": "http://localhost:28436/system/admin/_schema/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"system",
						"admin",
						"_schema",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Schema - Schema upsert",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4b06925b-f3a7-4b29-bb1e-4970ed2b3f49",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n                \"_id\": \"5db1dc9cb1573c6750b1c1ea\",\n                \"CollectionName\": \"ItemsXXX\"\n            }"
				},
				"url": {
					"raw": "http://localhost:28436/system/admin/_schema/5db1dc9cb1573c6750b1c1ea",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"system",
						"admin",
						"_schema",
						"5db1dc9cb1573c6750b1c1ea"
					]
				}
			},
			"response": []
		},
		{
			"name": "Schema - DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "437f56ec-a0ff-4e03-b8a1-7511c0b35ea1",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:28436/system/admin/_schema/5d4d768e7dde63419c9892ac",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"system",
						"admin",
						"_schema",
						"5d4d768e7dde63419c9892ac"
					]
				}
			},
			"response": []
		},
		{
			"name": "CRUD - LIST",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "66d2f62e-2780-440b-be5c-48a0f9f04bdc",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    var status=jsonData.status;",
							"    var itemsCount=jsonData.data.items.length;",
							"    var expectItemsCount=Math.min(jsonData.data.totalCount,jsonData.data.pageSize);",
							"    ",
							"    pm.expect(status).to.eql(0);",
							"    pm.expect(itemsCount).to.be.above(0);",
							"    pm.expect(itemsCount).to.be.eql(expectItemsCount);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:28436/api/CRUD/Items/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"api",
						"CRUD",
						"Items",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "CRUD - POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1494713-28e1-4d28-a115-6c2ce7aa8512",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"MyField\":\"value\",\n\t\"MyNumberField\":10\n}"
				},
				"url": {
					"raw": "http://localhost:28436/api/CRUD/Items/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"api",
						"CRUD",
						"Items",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "CRUD - UPDATE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4a27a199-c557-4d68-b25a-13e98fe41f35",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t \"MyField\": \"Prova1\",\n}"
				},
				"url": {
					"raw": "http://localhost:28436/api/CRUD/Items/5c7173ff4090c4599c0205f9/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"api",
						"CRUD",
						"Items",
						"5c7173ff4090c4599c0205f9",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "CRUD - GET",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a53dc84d-bdad-44b3-8920-8abf67245b0b",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:28436/api/CRUD/Items/5c7173ff4090c4599c0205f9/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"api",
						"CRUD",
						"Items",
						"5c7173ff4090c4599c0205f9",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Lambda - Dummy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0c2fe429-9f3c-4c7e-a9ac-0f99e4a55ac0",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"pm.test(\"Result contains what i expect\", function () {",
							"    var jsonData = pm.response.json();",
							"    var now=new Date();",
							"    var test=now.toISOString()",
							"    test=test.substring(0,10);",
							"    pm.expect(jsonData.now).to.have.string(test);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {},
				"url": {
					"raw": "http://localhost:28436/api/Lambda/DummyRest/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"api",
						"Lambda",
						"DummyRest",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Lambda - userinfo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "12616fbd-5179-435a-a0e5-95a4210a4e0e",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjQzMTEwNTc0ODJhZmMyODgyZDllYzVmNWEzYmIzOGJhIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1Mzg0MTQ3NzEsImV4cCI6MTUzODQxODM3MSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDoyODQzNiIsImF1ZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6Mjg0MzYvcmVzb3VyY2VzIiwiY2xpZW50X2lkIjoicm8uY2xpZW50Iiwic3ViIjoiQk9CIiwiYXV0aF90aW1lIjoxNTM4NDE0NzcxLCJpZHAiOiJsb2NhbCIsInNjb3BlIjpbIm9wZW5pZCJdLCJhbXIiOlsicHdkIl19.sMYm5SUATySB7vz7aqPSdcNyo1d4ii5mVE8SNXAwURTN5f1X0q3ijtVpkpYO6q19mdeCuICltMM4V0gnQuyIgX8JrrQgD-VrkWIFOvcaT-D4SZAJ_U45kofPolFzBbhltBMVDBPiKgX8WMv3NB_-65CXtqToZ1A2EdoiAXC2EXBt_ikxiDlkQwG0TWqOXd8J_J1ky_7nDxlkqblf79XUZguo97eLSBKYNDN03AWIrtSQJGRNPEwrlJnUm3rpWD9nopw8TtfqQBQngwliiJ947pq3zfUKPR_Wi1UT8Ouy9VT5AxyiT3VL1xeAM3kIwh0j9yehr4jARh_8IbHHRMoiSQ",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "openid",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:28436/api/Lambda/UserInfo",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"api",
						"Lambda",
						"UserInfo"
					]
				}
			},
			"response": []
		},
		{
			"name": "GraphQL -Query",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "03fc8c03-0f70-411d-9210-bc309662220e",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"pm.test(\"Returns at least 1 element\", function () {",
							"    var jsonData = pm.response.json();",
							"    var itemsCount=jsonData.data.items.length;",
							"    ",
							"    pm.expect(itemsCount).to.be.above(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\nQuery:\"{items(myField:\\\"\\\") {  _id\r\n  myNumberField\r\n}}\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:28436/api/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"api",
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "KeyStore POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ad880182-3307-43b9-b3da-f6000c2c1b10",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"value\": \"string\",\r\n  \"key\": \"string\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:28436/api/KeyStore",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"api",
						"KeyStore"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET KEYSTORE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a2a29d51-c0a6-41f4-83d8-989c9106783a",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"r\");",
							"   var h = pm.response.headers.get(\"r\");",
							"    pm.expect(h).to.have.string(\"string\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "HEAD",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:28436/api/KeyStore/string",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"api",
						"KeyStore",
						"string"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET ENUM",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f8b0a006-c19f-4b1e-afa6-5cacd499cdb2",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"pm.test(\"check for SavePipelineStage\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.PreSave).to.eql(\"PreSave\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:28436/system/Enum/SavePipelineStage",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"system",
						"Enum",
						"SavePipelineStage"
					]
				}
			},
			"response": []
		},
		{
			"name": "FT - IndexCreate",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cef21286-0ee4-4971-9de7-9ac19347192b",
						"exec": [
							"",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:28436/api/FullText/index/indexname",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"api",
						"FullText",
						"index",
						"indexname"
					]
				}
			},
			"response": []
		},
		{
			"name": "FT - DOCUMENT ADD",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cef21286-0ee4-4971-9de7-9ac19347192b",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n\t\"campo\":\"valore2\",\n\t\"id\":\"docid\"\n}"
				},
				"url": {
					"raw": "http://localhost:28436/api/FullText/doc/indexname",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"api",
						"FullText",
						"doc",
						"indexname"
					]
				}
			},
			"response": []
		},
		{
			"name": "FT - DOCUMENT GET",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cef21286-0ee4-4971-9de7-9ac19347192b",
						"exec": [
							"",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:28436/api/FullText/doc/indexname/docid",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"api",
						"FullText",
						"doc",
						"indexname",
						"docid"
					]
				}
			},
			"response": []
		},
		{
			"name": "FT - DOCUMENT DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cef21286-0ee4-4971-9de7-9ac19347192b",
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:28436/api/FullText/doc/indexname/docid",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"api",
						"FullText",
						"doc",
						"indexname",
						"docid"
					]
				}
			},
			"response": []
		},
		{
			"name": "FT - DOCUMENT Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cef21286-0ee4-4971-9de7-9ac19347192b",
						"exec": [
							"",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:28436/api/FullText/doc/search/indexname?searchQuery=*&start=0&size=20",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "28436",
					"path": [
						"api",
						"FullText",
						"doc",
						"search",
						"indexname"
					],
					"query": [
						{
							"key": "searchQuery",
							"value": "*"
						},
						{
							"key": "start",
							"value": "0"
						},
						{
							"key": "size",
							"value": "20"
						}
					]
				}
			},
			"response": []
		}
	]
}
